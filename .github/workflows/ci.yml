name: ci-min
on: [push, pull_request]

jobs:
  unit:
    runs-on: ubuntu-latest
    env:
      BASCULA_CI: "1"
      DESTDIR: "/tmp/ci-root"
    steps:
      - uses: actions/checkout@v4
      - name: Setup dirs
        run: |
          set -euo pipefail
          IFS=$'\n\t'
          PATH="$(pwd)/ci/mocks:$PATH" ci/bin/ci-doctor.sh "setup-dirs"
          mkdir -p /tmp/ci-root /tmp/ci-logs
          chmod -R 777 /tmp/ci-root /tmp/ci-logs
      - name: Install shells tooling
        run: |
          set -euo pipefail
          IFS=$'\n\t'
          PATH="$(pwd)/ci/mocks:$PATH" ci/bin/ci-doctor.sh "install-shells"
          sudo apt-get update
          sudo apt-get install -y bash coreutils grep sed findutils
      - name: CI install-1
        env:
          BASCULA_CI: "1"
          DESTDIR: "/tmp/ci-root"
        run: |
          set -euo pipefail
          IFS=$'\n\t'
          PATH="$(pwd)/ci/mocks:$PATH" ci/bin/ci-doctor.sh "install-1"
          PATH="$(pwd)/ci/mocks:$PATH" bash scripts/install-1-system.sh
      - name: CI install-2
        env:
          BASCULA_CI: "1"
          DESTDIR: "/tmp/ci-root"
        run: |
          set -euo pipefail
          IFS=$'\n\t'
          PATH="$(pwd)/ci/mocks:$PATH" ci/bin/ci-doctor.sh "install-2"
          PATH="$(pwd)/ci/mocks:$PATH" bash scripts/install-2-app.sh
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Upgrade pip
        run: |
          set -euo pipefail
          IFS=$'\n\t'
          python -m pip install --upgrade pip wheel
      - name: Install app requirements (toolcache 3.11)
        run: |
          set -euo pipefail
          IFS=$'\n\t'
          pip install -r requirements.txt
      - name: Validate icons (toolcache 3.11)
        run: |
          set -euo pipefail
          IFS=$'\n\t'
          PATH="$(pwd)/ci/mocks:$PATH" ci/bin/ci-doctor.sh "validate-icons"
          python scripts/validate_assets.py || (python scripts/write_icons.py --out assets/icons --overwrite && python scripts/validate_assets.py)
      - name: Run minimal tests
        run: |
          set -euo pipefail
          IFS=$'\n\t'
          mkdir -p ci-logs
          PATH="$(pwd)/ci/mocks:$PATH" ci/bin/ci-doctor.sh "test_min"
          PATH="$(pwd)/ci/mocks:$PATH" BASCULA_CI=1 DESTDIR=/tmp/ci-root bash ci/tests/test_min.sh
      - name: Install system Tk deps
        run: |
          set -euo pipefail
          IFS=$'\n\t'
          sudo apt-get update
          sudo apt-get install -y python3-tk xvfb
          python3 -c "import sys; print('System Python:', sys.version)"
      - name: Install CI extras for system Python
        run: |
          set -euo pipefail
          IFS=$'\n\t'
          python3 -m pip install --upgrade pip
          python3 -m pip install Pillow
      - name: Test icon loader (Tk smoke)
        run: |
          set -euo pipefail
          IFS=$'\n\t'
          PATH="$(pwd)/ci/mocks:$PATH" ci/bin/ci-doctor.sh "test_icon_loader"
          xvfb-run -a /usr/bin/python3 ci/tests/test_icon_loader.py
      - name: Run bascula-app unit guards test
        run: |
          set -euo pipefail
          IFS=$'\n\t'
          mkdir -p ci-logs
          PATH="$(pwd)/ci/mocks:$PATH" ci/bin/ci-doctor.sh "test_app_unit"
          PATH="$(pwd)/ci/mocks:$PATH" BASCULA_CI=1 DESTDIR=/tmp/ci-root bash ci/tests/test_app_unit.sh
      - name: Run UART legacy test
        run: |
          set -euo pipefail
          IFS=$'\n\t'
          mkdir -p ci-logs
          PATH="$(pwd)/ci/mocks:$PATH" ci/bin/ci-doctor.sh "test_uart"
          PATH="$(pwd)/ci/mocks:$PATH" BASCULA_CI=1 DESTDIR=/tmp/ci-root bash ci/tests/test_uart.sh
      - name: Run x735 unit test
        run: |
          set -euo pipefail
          IFS=$'\n\t'
          mkdir -p ci-logs
          PATH="$(pwd)/ci/mocks:$PATH" ci/bin/ci-doctor.sh "test_x735"
          PATH="$(pwd)/ci/mocks:$PATH" BASCULA_CI=1 DESTDIR=/tmp/ci-root bash ci/tests/test_x735.sh
      - name: Run Python deps test
        run: |
          set -euo pipefail
          IFS=$'\n\t'
          mkdir -p ci-logs
          PATH="$(pwd)/ci/mocks:$PATH" ci/bin/ci-doctor.sh "test_deps"
          PATH="$(pwd)/ci/mocks:$PATH" BASCULA_CI=1 DESTDIR=/tmp/ci-root bash ci/tests/test_deps.sh
      - name: Run safe_run recovery tests
        run: |
          set -euo pipefail
          IFS=$'\n\t'
          mkdir -p ci-logs
          PATH="$(pwd)/ci/mocks:$PATH" ci/bin/ci-doctor.sh "test_safe_run"
          PATH="$(pwd)/ci/mocks:$PATH" BASCULA_CI=1 DESTDIR=/tmp/ci-root bash ci/tests/test_safe_run.sh
      - name: Run bascula APP_READY guard test
        run: |
          set -euo pipefail
          IFS=$'\n\t'
          mkdir -p ci-logs
          PATH="$(pwd)/ci/mocks:$PATH" ci/bin/ci-doctor.sh "test_app_ready"
          PATH="$(pwd)/ci/mocks:$PATH" BASCULA_CI=1 DESTDIR=/tmp/ci-root bash ci/tests/test_app_ready.sh
      - name: Run early heartbeat test
        run: |
          set -euo pipefail
          IFS=$'\n\t'
          mkdir -p ci-logs
          PATH="$(pwd)/ci/mocks:$PATH" ci/bin/ci-doctor.sh "test_early_heartbeat"
          PATH="$(pwd)/ci/mocks:$PATH" BASCULA_CI=1 DESTDIR=/tmp/ci-root bash ci/tests/test_early_heartbeat.sh
      - name: Run theme lint
        run: |
          set -euo pipefail
          IFS=$'\n\t'
          PATH="$(pwd)/ci/mocks:$PATH" ci/bin/ci-doctor.sh "lint_theme"
          python scripts/lint_theme.py
      - name: Run UI structural probe
        run: |
          set -euo pipefail
          IFS=$'\n\t'
          PATH="$(pwd)/ci/mocks:$PATH" ci/bin/ci-doctor.sh "ui_probe"
          sudo apt-get update && sudo apt-get install -y xvfb
          xvfb-run -a python ci/ui_probe.py
      - name: Show last logs
        if: always()
        run: |
          set -euo pipefail
          IFS=$'\n\t'
          PATH="$(pwd)/ci/mocks:$PATH" ci/bin/ci-doctor.sh "show-logs"
          if ls ci-logs/*.log >/dev/null 2>&1; then
            for logfile in ci-logs/*.log; do
              echo "Last 50 lines from ${logfile}:"
              tail -n 50 "${logfile}"
            done
          else
            echo 'No ci-logs/*.log files found.'
          fi
      - name: Pack logs
        if: always()
        run: |
          set -euo pipefail
          IFS=$'\n\t'
          PATH="$(pwd)/ci/mocks:$PATH" ci/bin/ci-doctor.sh "pack-logs"
          mkdir -p ci-logs
          rm -rf ci-logs/systemd
          if [ -d /tmp/ci-root/etc/systemd/system ]; then
            mkdir -p ci-logs/systemd
            cp -R /tmp/ci-root/etc/systemd/system ci-logs/systemd/
          fi
      - name: Upload logs
        if: failure() || env.CI_ATTACH_LOGS == '1'
        uses: actions/upload-artifact@v4
        with:
          name: ci-logs
          path: ci-logs/**
          if-no-files-found: ignore
