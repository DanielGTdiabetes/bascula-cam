name: ci-min
on: [push, pull_request]

jobs:
  unit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup dirs
        run: mkdir -p /tmp/ci-root /tmp/ci-logs && chmod -R 777 /tmp/ci-root /tmp/ci-logs
      - name: Install shells tooling
        run: sudo apt-get update && sudo apt-get install -y bash coreutils grep sed findutils
      - name: CI install-1
        env:
          BASCULA_CI: "1"
          DESTDIR: "/tmp/ci-root"
        run: bash scripts/install-1-system.sh
      - name: CI install-2
        env:
          BASCULA_CI: "1"
          DESTDIR: "/tmp/ci-root"
        run: bash scripts/install-2-app.sh
      - name: Validate icons
        run: |
          python3 -m scripts.validate_assets || (python3 -m scripts.write_icons --out assets/icons --overwrite && python3 -m scripts.validate_assets)
      - name: Run minimal tests
        run: |
          set -euxo pipefail
          mkdir -p ci-logs
          PATH="$(pwd)/ci/mocks:$PATH" BASCULA_CI=1 DESTDIR=/tmp/ci-root bash -eux ci/tests/test_min.sh 2>&1 | tee -a ci-logs/run.log
      - name: Test icon loader
        run: |
          sudo apt-get update && sudo apt-get install -y python3-tk xvfb
          xvfb-run -a python3 ci/tests/test_icon_loader.py
      - name: Run bascula-app unit guards test
        run: |
          set -euxo pipefail
          mkdir -p ci-logs
          PATH="$(pwd)/ci/mocks:$PATH" BASCULA_CI=1 DESTDIR=/tmp/ci-root bash -eux ci/tests/test_app_unit.sh 2>&1 | tee -a ci-logs/run.log
      - name: Run UART legacy test
        run: |
          set -euxo pipefail
          mkdir -p ci-logs
          PATH="$(pwd)/ci/mocks:$PATH" BASCULA_CI=1 DESTDIR=/tmp/ci-root bash -eux ci/tests/test_uart.sh 2>&1 | tee -a ci-logs/run.log
      - name: Run x735 unit test
        run: |
          set -euxo pipefail
          mkdir -p ci-logs
          PATH="$(pwd)/ci/mocks:$PATH" BASCULA_CI=1 DESTDIR=/tmp/ci-root bash -eux ci/tests/test_x735.sh 2>&1 | tee -a ci-logs/run.log
      - name: Run Python deps test
        run: |
          set -euxo pipefail
          mkdir -p ci-logs
          PATH="$(pwd)/ci/mocks:$PATH" BASCULA_CI=1 DESTDIR=/tmp/ci-root bash -eux ci/tests/test_deps.sh 2>&1 | tee -a ci-logs/run.log
      - name: Run safe_run recovery tests
        run: |
          set -euxo pipefail
          mkdir -p ci-logs
          PATH="$(pwd)/ci/mocks:$PATH" BASCULA_CI=1 DESTDIR=/tmp/ci-root bash -eux ci/tests/test_safe_run.sh 2>&1 | tee -a ci-logs/run.log
      - name: Run bascula APP_READY guard test
        run: |
          set -euxo pipefail
          mkdir -p ci-logs
          PATH="$(pwd)/ci/mocks:$PATH" BASCULA_CI=1 DESTDIR=/tmp/ci-root bash -eux ci/tests/test_app_ready.sh 2>&1 | tee -a ci-logs/run.log
      - name: Run early heartbeat test
        run: |
          set -euxo pipefail
          mkdir -p ci-logs
          PATH="$(pwd)/ci/mocks:$PATH" BASCULA_CI=1 DESTDIR=/tmp/ci-root bash -eux ci/tests/test_early_heartbeat.sh 2>&1 | tee -a ci-logs/run.log
      - name: Run theme lint
        run: python scripts/lint_theme.py
      - name: Run UI structural probe
        run: |
          sudo apt-get update && sudo apt-get install -y xvfb
          xvfb-run -a python ci/ui_probe.py
      - name: Show last logs
        if: always()
        run: |
          if [ -f ci-logs/run.log ]; then
            echo 'Last 200 lines from ci-logs/run.log:'
            tail -n 200 ci-logs/run.log
          else
            echo 'ci-logs/run.log not found.'
          fi
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ci-logs
          path: |
            ci-logs/
            /tmp/ci-root/etc/systemd/system
